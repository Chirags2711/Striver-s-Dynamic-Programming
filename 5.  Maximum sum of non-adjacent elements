//House Robber I
//Recursive
public static int fun(ArrayList<Integer> nums, int n){
	if(n<=0) return 0;
	int ans1 = fun(nums, n-1);
	int ans2 = fun(nums, n-2) + nums.get(n-1);
	return Math.max(ans1, ans2);
}

//Space Optimized Bottom Up.
public int rob(int[] nums) {
        int n = nums.length;
	int prev1 = 0; //0 elements
	if(n==0) return prev1;
	int prev2 = nums[0]; //1 element
	if(n==1) return prev2;
	int ans = 0;
	for(int i=2; i<=n; i++){ //i elements
		ans = Math.max(prev2, nums[i-1]+prev1);
		prev1 = prev2;
		prev2 = ans;
	}
	return ans;
}
