class Solution {
    public int cherryPickup(int[][] grid) {
        int m = grid.length;
        int n = grid[0].length;
        int dp[][][] = new int[m][n][n];
        for(int row = m-1; row>=0; row--){
            for(int col1 = n-1; col1>=0; col1--){
                for(int col2 = n-1; col2>=0; col2--){
                    int ansCurr = col1==col2? grid[row][col1] : grid[row][col1] + grid[row][col2];
                    int nextAns = 0;
                    for(int i=-1; i<=1; i++){
                        for(int j=-1; j<=1; j++){
                            if(row+1<m && col1+i<n && col1+i>=0 && col2+j<n && col2+j>=0)nextAns = Math.max(nextAns, dp[row+1][col1+i][col2+j]);
                        }
                    }
                    dp[row][col1][col2] = ansCurr + nextAns;
                }
            }
        }
        return dp[0][0][n-1];
    }
}
